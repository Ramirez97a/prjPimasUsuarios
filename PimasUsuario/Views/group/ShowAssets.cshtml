<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width, initial-scale=1, shrink-to-fit=no">
    <title>ShowAssets</title>
    <link href="https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/css/bootstrap.min.css" rel="stylesheet">
    <link href="~/Content/bootstrap.min.css" rel="stylesheet" />
    <script src="~/ViewerJS/PDF/build/pdf.js" type="module"></script>
    <script src="~/ViewerJS/PDF/build/pdf.worker.js" type="module"></script>
    <script src="~/ViewerJS/PDF/build/pdf.sandbox.js" type="module"></script>
    <style>
        body {
            background-color: #f8f9fa;
            overflow-y: auto;
        }

        #main-container {
            margin-top: 20px;
        }

        #the-canvas {
            border: 1px solid #dee2e6;
            background-color: #fff;
            width: 50%;
        }

        #loader-container {
            margin-top: 50px;
        }

        #btnControl {
            margin-top: 20px;
        }
     
    </style>
</head>
<body class="text-center">
    <div class="container-fluid" id="">
        <div class="row">
            <div class="col-12">
                <h3 class="card-header text-white" style="background-color:#133E6D;">Contenido</h3>
            </div>
        </div>

        <div class="row">
            <div class="col-12">
                <div class="text-right mt-3">
                    <a  class="btn btn-outline-dark btn-lg" ><i class="far fa-arrow-alt-circle-left"></i> Regresar</a>
                </div>
            </div>
        </div>

        <div class="row justify-content-center" id="loader-container">
            <div class="spinner-grow text-danger" id="loader"></div>
        </div>

        <div class="container text-center">
            <div class="row justify-content-center align-items-center" id="btnControl" style="display:none;">
                <div class="col-12">
                    <div class="d-inline-block mx-2">
                        <button id="prev" class="btn btn-primary mb-2">Anterior</button>
                    </div>
                    <div class="d-inline-block mx-2">
                        <button id="next" class="btn btn-primary mb-2" >Siguiente</button>
                    </div>
                    <div class="d-inline-block">
                        <span>Página: <span id="page_num"></span> / <span id="page_count"></span></span>
                    </div>
                </div>
            </div>
        </div>


        <div class="container" id="canvas-container" style="display:none;">
            <canvas id="the-canvas" class="mw-100"><p>Por favor espere...</p></canvas>
        </div>



        <script src="https://code.jquery.com/jquery-3.5.1.min.js"></script>
        <script src="https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/js/bootstrap.min.js"></script>

        <script type="module">
            const urlParams = new URLSearchParams(window.location.search);
            const id = urlParams.get('id');
            var url = `/group/archivo/${id}`;
            console.log(url);

            // Loaded via <script> tag, create shortcut to access PDF.js exports.
            var { pdfjsLib } = globalThis;

            // The workerSrc property shall be specified.
            pdfjsLib.GlobalWorkerOptions.workerSrc = '//mozilla.github.io/pdf.js/build/pdf.worker.mjs';

            var pdfDoc = null,
                pageNum = 1,
                pageRendering = false,
                pageNumPending = null,
                scale = 1,
                canvas = document.getElementById('the-canvas'),
                ctx = canvas.getContext('2d');


            function renderPage(num) {
                pageRendering = true;
                // Using promise to fetch the page
                pdfDoc.getPage(num).then(function (page) {
                    var viewport = page.getViewport({ scale: scale });
                    canvas.height = viewport.height;
                    canvas.width = viewport.width;

                    // Render PDF page into canvas context
                    var renderContext = {
                        canvasContext: ctx,
                        viewport: viewport
                    };
                    var renderTask = page.render(renderContext);

                    // Wait for rendering to finish
                    renderTask.promise.then(function () {
                        pageRendering = false;
                        if (pageNumPending !== null) {
                            // New page rendering is pending
                            renderPage(pageNumPending);
                            pageNumPending = null;
                        }
                    });
                });

                // Update page counters
                document.getElementById('page_num').textContent = num;
            }

            /**
             * If another page rendering in progress, waits until the rendering is
             * finised. Otherwise, executes rendering immediately.
             */
            function queueRenderPage(num) {
                if (pageRendering) {
                    pageNumPending = num;
                } else {
                    renderPage(num);
                }
            }

            /**
             * Displays previous page.
             */
            function onPrevPage() {
                if (pageNum <= 1) {
                    return;
                }
                pageNum--;
                queueRenderPage(pageNum);
            }
            document.getElementById('prev').addEventListener('click', onPrevPage);

            /**
             * Displays next page.
             */
            function onNextPage() {
                if (pageNum >= pdfDoc.numPages) {
                    return;
                }
                pageNum++;
                queueRenderPage(pageNum);
            }
            document.getElementById('next').addEventListener('click', onNextPage);

            /**
             * Asynchronously downloads PDF.
             */
            pdfjsLib.getDocument(url).promise.then(function (pdfDoc_) {
                pdfDoc = pdfDoc_;
                document.getElementById('page_count').textContent = pdfDoc.numPages;

                document.getElementById("loader").style.display = "none";
                document.getElementById("btnControl").style.display = "block";
                var canvas = document.getElementById('canvas-container');
                canvas.removeAttribute('style');
                // Initial/first page rendering
                renderPage(pageNum);
            });

        </script>

        <script>
            // Función de retroceso
            function goBack() {
                window.history.back();
            }
        </script>
</body>
</html>
